---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const isActive = href === pathname || href === pathname.replace(/\/$/, "");
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
  <slot />
</a>

<style lang="scss">
  a {
    display: inline-block;
    text-decoration: none;
    position: relative;
    float: left;
    transition: color 0.15s ease;
  }

  a::after {
    content: "";
    position: absolute;
    display: block;
    width: 0px;
    height: 4px;

    background-color: #7c2efa;
    border-radius: 20px;
    margin-top: 5px;

    left: 50%;
    transform: translate(50%, 0);

    transition: all 0.3s ease;
  }

  a.active::after {
    width: 10px;

    left: calc(50% - 5px);
    transform: translate(calc(50% - 5px), 0);
  }

  @media (hover: hover) {
    a:hover::after {
      width: 20%;

      left: 40%;
      transform: translate(0px);
    }
  }

  // MEDIUM SIZE SCREENS
  @media only screen and (max-width: 1100px) {
  }

  // SMALL SIZE SCREENS
  @media only screen and (max-width: 640px) {
    a.active::after {
      width: 100px;
      left: calc(50% - 100px);
    }

    @media (hover: hover) {
      a,
      a:visited {
        &:hover {
          color: #fff;

          &::after {
            width: 60px;

            left: calc(50% - 30px);
            transform: translate(calc(50% - 30px), -10px);
          }
        }
      }
    }

    // a.active::after {
    //   width: 100px;
    //   left: 50%;
    //   transform: translate(calc(50% - 100px), -10px);
    // }

    // @media (hover: hover) {
    //   a,
    //   a:visited {
    //     &:hover {
    //       color: #f69;

    //       &::after {
    //         width: 100px;
    //         left: 50%;
    //         transform: translate(calc(50% - 100px), -10px);
    //       }
    //     }
    //   }
    // }
  }
</style>
